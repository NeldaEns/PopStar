    public void Item1Classic()
    {
        if (clickBox1 == true && clickBox2 == true && moveBox.Count == 2)
        {
            Box box1 = moveBox[0].GetComponent<Box>();
            Box box2 = moveBox[1].GetComponent<Box>();

            if (box1.x > 0 && box2.x == box1.x - 1 && box1.y == box2.y && box2 != null && box1.type != box2.type)
            {
                var temp = box1.x;
                box1.x = box2.x;
                box2.x = temp;
                box1.MoveLeft1();
                box2.MoveRight();


               box1.transform.position = box1.CalculatationPosition(box1.x, box1.y);
                DataManager.ins.colorMatrixClassic[box1.x][box1.y] = box1.type;

                box2.transform.position = box2.CalculatationPosition(box2.x, box2.y);
                DataManager.ins.colorMatrixClassic[box2.x][box2.y] = box2.type;
            }
            if (box1.x < 9 & box2.x == box1.x + 1 && box1.y == box2.y && box2 != null && box1.type != box2.type)
            {
                box2.x--;
                box2.MoveLeft1();
                box1.x++;
                box1.MoveRight();
                box1 = box2;
                box1.x = box2.x;
                box2.x = box1.x - 1;

                box1.transform.position = box1.CalculatationPosition(box1.x, box1.y);
                DataManager.ins.colorMatrixClassic[box1.x][box1.y] = box1.type;

                box2.transform.position = box2.CalculatationPosition(box2.x, box2.y);
                DataManager.ins.colorMatrixClassic[box2.x][box2.y] = box2.type;
            }
            if (box1.y > 0 && box2.y == box1.y - 1 && box1.x == box2.x && box2 != null && box1.type != box2.type)
            {
                box1.y--;
                box1.MoveDown1();
                box2.y++;
                box2.MoveUp();
                box1 = box2;
                box1.y = box2.y;
                box2.y = box1.y + 1;

                box1.transform.position = box1.CalculatationPosition(box1.x, box1.y);
                DataManager.ins.colorMatrixClassic[box1.x][box1.y] = box1.type;

                box2.transform.position = box2.CalculatationPosition(box2.x, box2.y);
                DataManager.ins.colorMatrixClassic[box2.x][box2.y] = box2.type;
            }
            if (box1.y < 9 & box2.y == box1.y + 1 && box1.x == box2.x && box2 != null && box1.type != box2.type)
            {
                box2.y--;
                box2.MoveDown1();
                box1.y++;
                box1.MoveUp();
                box1 = box2;
                box1.y = box2.y;
                box2.y = box1.y - 1;

                box1.transform.position = box1.CalculatationPosition(box1.x, box1.y);
                DataManager.ins.colorMatrixClassic[box1.x][box1.y] = box1.type;

                box2.transform.position = box2.CalculatationPosition(box2.x, box2.y);
                DataManager.ins.colorMatrixClassic[box2.x][box2.y] = box2.type;
            }
            CheckWinLoseClassic();
            SaveBoxClassic();
            moveBox.Clear();
            clickBox1 = false;
            clickBox2 = false;
            useIt1 = false;
            ((UIClassic)UIController.ins.currentScreen).selectIT1.SetActive(false);
        }
    }